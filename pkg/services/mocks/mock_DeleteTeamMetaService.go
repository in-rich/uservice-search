// Code generated by mockery v2.43.2. DO NOT EDIT.

package servicesmocks

import (
	context "context"

	models "github.com/in-rich/uservice-search/pkg/models"
	mock "github.com/stretchr/testify/mock"
)

// MockDeleteTeamMetaService is an autogenerated mock type for the DeleteTeamMetaService type
type MockDeleteTeamMetaService struct {
	mock.Mock
}

type MockDeleteTeamMetaService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockDeleteTeamMetaService) EXPECT() *MockDeleteTeamMetaService_Expecter {
	return &MockDeleteTeamMetaService_Expecter{mock: &_m.Mock}
}

// Exec provides a mock function with given fields: ctx, teamMeta
func (_m *MockDeleteTeamMetaService) Exec(ctx context.Context, teamMeta *models.DeleteTeamMeta) error {
	ret := _m.Called(ctx, teamMeta)

	if len(ret) == 0 {
		panic("no return value specified for Exec")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.DeleteTeamMeta) error); ok {
		r0 = rf(ctx, teamMeta)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockDeleteTeamMetaService_Exec_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Exec'
type MockDeleteTeamMetaService_Exec_Call struct {
	*mock.Call
}

// Exec is a helper method to define mock.On call
//   - ctx context.Context
//   - teamMeta *models.DeleteTeamMeta
func (_e *MockDeleteTeamMetaService_Expecter) Exec(ctx interface{}, teamMeta interface{}) *MockDeleteTeamMetaService_Exec_Call {
	return &MockDeleteTeamMetaService_Exec_Call{Call: _e.mock.On("Exec", ctx, teamMeta)}
}

func (_c *MockDeleteTeamMetaService_Exec_Call) Run(run func(ctx context.Context, teamMeta *models.DeleteTeamMeta)) *MockDeleteTeamMetaService_Exec_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*models.DeleteTeamMeta))
	})
	return _c
}

func (_c *MockDeleteTeamMetaService_Exec_Call) Return(_a0 error) *MockDeleteTeamMetaService_Exec_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockDeleteTeamMetaService_Exec_Call) RunAndReturn(run func(context.Context, *models.DeleteTeamMeta) error) *MockDeleteTeamMetaService_Exec_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockDeleteTeamMetaService creates a new instance of MockDeleteTeamMetaService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockDeleteTeamMetaService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockDeleteTeamMetaService {
	mock := &MockDeleteTeamMetaService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
