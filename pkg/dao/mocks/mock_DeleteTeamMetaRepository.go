// Code generated by mockery v2.43.2. DO NOT EDIT.

package daomocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockDeleteTeamMetaRepository is an autogenerated mock type for the DeleteTeamMetaRepository type
type MockDeleteTeamMetaRepository struct {
	mock.Mock
}

type MockDeleteTeamMetaRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *MockDeleteTeamMetaRepository) EXPECT() *MockDeleteTeamMetaRepository_Expecter {
	return &MockDeleteTeamMetaRepository_Expecter{mock: &_m.Mock}
}

// DeleteTeamMeta provides a mock function with given fields: ctx, teamID
func (_m *MockDeleteTeamMetaRepository) DeleteTeamMeta(ctx context.Context, teamID string) error {
	ret := _m.Called(ctx, teamID)

	if len(ret) == 0 {
		panic("no return value specified for DeleteTeamMeta")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, teamID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockDeleteTeamMetaRepository_DeleteTeamMeta_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteTeamMeta'
type MockDeleteTeamMetaRepository_DeleteTeamMeta_Call struct {
	*mock.Call
}

// DeleteTeamMeta is a helper method to define mock.On call
//   - ctx context.Context
//   - teamID string
func (_e *MockDeleteTeamMetaRepository_Expecter) DeleteTeamMeta(ctx interface{}, teamID interface{}) *MockDeleteTeamMetaRepository_DeleteTeamMeta_Call {
	return &MockDeleteTeamMetaRepository_DeleteTeamMeta_Call{Call: _e.mock.On("DeleteTeamMeta", ctx, teamID)}
}

func (_c *MockDeleteTeamMetaRepository_DeleteTeamMeta_Call) Run(run func(ctx context.Context, teamID string)) *MockDeleteTeamMetaRepository_DeleteTeamMeta_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *MockDeleteTeamMetaRepository_DeleteTeamMeta_Call) Return(_a0 error) *MockDeleteTeamMetaRepository_DeleteTeamMeta_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockDeleteTeamMetaRepository_DeleteTeamMeta_Call) RunAndReturn(run func(context.Context, string) error) *MockDeleteTeamMetaRepository_DeleteTeamMeta_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockDeleteTeamMetaRepository creates a new instance of MockDeleteTeamMetaRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockDeleteTeamMetaRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockDeleteTeamMetaRepository {
	mock := &MockDeleteTeamMetaRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
